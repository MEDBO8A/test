IntSumReducer.java :
import org.apache.hadoop.io.Text; 
import org.apache.hadoop.mapreduce.Reducer; 
import java.io.IOException; 
import java.util.ArrayList; 
import java.util.List;

public class IntSumReducer extends Reducer<Text, Text, Text, Text> {
    private Text result = new Text();

    public void reduce(Text key, Iterable<Text> values, Context context) throws IOException, InterruptedException {
        List<String> words = new ArrayList<String>(); 
        for (Text val : values) {
            words.add(val.toString());
        }
        if (words.size() > 1) { 
            StringBuilder sb = new StringBuilder();
            for (String word : words) {
                sb.append(word).append(" "); 
            }
            result.set(sb.toString().trim()); 
            context.write(new Text(""), result); 
        }
    }
}

TokenizerMapper.java :
import org.apache.hadoop.io.Text; 
import org.apache.hadoop.mapreduce.Mapper; 
import java.io.IOException; 
import java.util.Arrays; 

public class TokenizerMapper extends Mapper<Object, Text, Text, Text> {
    private Text sortedWord = new Text();
    private Text originalWord = new Text();

    public void map(Object key, Text value, Context context) throws IOException, InterruptedException {
        String word = value.toString();
        char[] charArray = word.toCharArray();
        Arrays.sort(charArray);
        sortedWord.set(new String(charArray));
        originalWord.set(word);
        context.write(sortedWord, originalWord);
    }
}
WordCount.java :
import org.apache.hadoop.conf.Configuration;
import org.apache.hadoop.fs.Path;
import org.apache.hadoop.io.Text;
import org.apache.hadoop.mapreduce.Job;
import org.apache.hadoop.mapreduce.lib.input.FileInputFormat;
import org.apache.hadoop.mapreduce.lib.output.FileOutputFormat;

public class WordCount {
    public static void main(String[] args) throws Exception {
        Configuration conf = new Configuration();
        Job job = Job.getInstance(conf, "anagram count");
        job.setJarByClass(WordCount.class);
        job.setMapperClass(TokenizerMapper.class);
        job.setReducerClass(IntSumReducer.class);
        job.setOutputKeyClass(Text.class);
        job.setOutputValueClass(Text.class);
        FileInputFormat.addInputPath(job, new Path(args[0]));
        FileOutputFormat.setOutputPath(job, new Path(args[1]));
        System.exit(job.waitForCompletion(true) ? 0 : 1);
    }
}
